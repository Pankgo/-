{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pankg\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uC1FC\\uD551\\uBAB0(\\uAC04\\uB2E8)\\\\my-app\\\\src\\\\VIEW\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../Style/login.css\";\nimport \"../Style/common.css\";\n//import axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const currentURL = useNavigate(); //현재 url 주소 가져오기\n\n  const Idtype = e => {\n    setUserId(e.target.value);\n  };\n  const Passwordtype = e => {\n    setPassword(e.target.value);\n  };\n\n  // const logincheck = async () => {\n  //     try {\n  //       console.log(userId,password);\n  //       const response = await axios.post('http://localhost:3001/login', {\n  //         loginId: userId,\n  //         password: password,\n  //       });\n  //       console.log(response.data);\n\n  //       if (response.data.result) {\n  //           // 로그인 성공 시 홈페이지로 이동\n  //           currentURL(\"/home\");\n  //       } else {\n  //           // 로그인 실패 시 팝업으로 메시지 표시\n  //           alert('로그인 실패: 아이디 또는 비밀번호가 올바르지 않습니다.');\n  //       }\n  //     } catch (error) {\n  //       console.error(\"Error fetching data:\", error);\n  //     }\n  //   };\n\n  const handleLogin = e => {\n    e.preventDefault(); // 폼의 기본 동작 막기\n    logincheck();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logincontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"loginHead\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: Idtype,\n          className: \"loginbox\",\n          placeholder: \"  \\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: Passwordtype,\n          className: \"loginbox\",\n          placeholder: \"  \\uAC1C\\uC778\\uD0A4\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"loginbutton\",\n          children: \"signIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n}\n_s(Login, \"v8f0QxHoRjLYvMJ9GquR+wRiFTw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","userId","setUserId","password","setPassword","currentURL","Idtype","e","target","value","Passwordtype","handleLogin","preventDefault","logincheck","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/pankg/OneDrive/바탕 화면/쇼핑몰(간단)/my-app/src/VIEW/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../Style/login.css\"\r\nimport \"../Style/common.css\"\r\n//import axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n   \r\n        const currentURL = useNavigate(); //현재 url 주소 가져오기\r\n\r\n\r\n        const Idtype = (e) => {\r\n          setUserId(e.target.value)\r\n        }\r\n        const Passwordtype = (e) => {\r\n            setPassword(e.target.value)\r\n        }\r\n\r\n        // const logincheck = async () => {\r\n        //     try {\r\n        //       console.log(userId,password);\r\n        //       const response = await axios.post('http://localhost:3001/login', {\r\n        //         loginId: userId,\r\n        //         password: password,\r\n        //       });\r\n        //       console.log(response.data);\r\n\r\n        //       if (response.data.result) {\r\n        //           // 로그인 성공 시 홈페이지로 이동\r\n        //           currentURL(\"/home\");\r\n        //       } else {\r\n        //           // 로그인 실패 시 팝업으로 메시지 표시\r\n        //           alert('로그인 실패: 아이디 또는 비밀번호가 올바르지 않습니다.');\r\n        //       }\r\n        //     } catch (error) {\r\n        //       console.error(\"Error fetching data:\", error);\r\n        //     }\r\n        //   };\r\n        \r\n          const handleLogin = (e) => {\r\n            e.preventDefault(); // 폼의 기본 동작 막기\r\n            logincheck();\r\n          };\r\n        \r\n\r\n\r\n    return (\r\n          <div>\r\n                <div className='logincontainer'>\r\n                  <form onSubmit={handleLogin}>\r\n                      <h1 className='loginHead'>Sign In</h1>\r\n                      <input type = \"text\"  onChange = {Idtype} className = \"loginbox\" placeholder=\"  이름\"></input>\r\n                      <input type = \"password\" onChange = {Passwordtype} className = \"loginbox\" placeholder=\"  개인키입력\"></input>\r\n                      <button type = \"submit\" className=\"loginbutton\">signIn</button> \r\n                  </form>\r\n                </div>\r\n          </div>\r\n    );\r\n}\r\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAC3B,OAAO,qBAAqB;AAC5B;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,UAAU,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAGlC,MAAMU,MAAM,GAAIC,CAAC,IAAK;IACpBL,SAAS,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EACD,MAAMC,YAAY,GAAIH,CAAC,IAAK;IACxBH,WAAW,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAME,WAAW,GAAIJ,CAAC,IAAK;IACzBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBC,UAAU,CAAC,CAAC;EACd,CAAC;EAIP,oBACMf,OAAA;IAAAgB,QAAA,eACMhB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BhB,OAAA;QAAMkB,QAAQ,EAAEL,WAAY;QAAAG,QAAA,gBACxBhB,OAAA;UAAIiB,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCtB,OAAA;UAAOuB,IAAI,EAAG,MAAM;UAAEC,QAAQ,EAAIhB,MAAO;UAACS,SAAS,EAAG,UAAU;UAACQ,WAAW,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5FtB,OAAA;UAAOuB,IAAI,EAAG,UAAU;UAACC,QAAQ,EAAIZ,YAAa;UAACK,SAAS,EAAG,UAAU;UAACQ,WAAW,EAAC;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxGtB,OAAA;UAAQuB,IAAI,EAAG,QAAQ;UAACN,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEhB;AAACpB,EAAA,CAtDQD,KAAK;EAAA,QAIaH,WAAW;AAAA;AAAA4B,EAAA,GAJ7BzB,KAAK;AAuDd,eAAeA,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}